using System.Web.Mvc;
using System.Web.Routing;

namespace ControllersAndActions.Controllers
{
    /* Implementing an IController interface allows us to create a class the the MVC Framework recognises
     * as a controller and sends requests to. The MVC Framework does not specify how a controller deals
     * with a request which means you can take any approach you want. The MVC Framework knows which
     * controller to target by looking at the 'controller' property generated by the routing data. This
     * is obviously a very low-level implementation of a controller. */
    public class BasicController : IController
    {
        public void Execute(RequestContext requestContext)
        {
            string controller = (string)requestContext.RouteData.Values["controller"];
            string action = (string)requestContext.RouteData.Values["action"];

            if (action.ToLower() == "redirect")
                requestContext.HttpContext.Response.Redirect("/Derived/Index");
            else
                requestContext.HttpContext.Response.Write(
                    string.Format("Controller: {0}, Action: {1}", controller, action));
        }
    }
}